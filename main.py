import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

# üîπ –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID (–∫—É–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∏)
API_TOKEN = "8478841875:AAGg0XIIbQ_OamBOHW3TEYRe_WODE7A4KuE"
ADMIN_ID = @IEvgeniyV  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID (–º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É @userinfobot)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# üîπ FSM (–º–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∑–∞—è–≤–∫–∏)
class RequestForm(StatesGroup):
    waiting_for_name = State()
    waiting_for_topic = State()
    waiting_for_contact = State()

# üîπ –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
qa_pairs = [
    ("–ê —á—Ç–æ –≤–æ–æ–±—â–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?",
     "–≠—Ç–æ —Å–ø–æ–∫–æ–π–Ω–∞—è –±–µ—Å–µ–¥–∞. –¢—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å, —á—Ç–æ –≤–æ–ª–Ω—É–µ—Ç, –∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Å–∏–º–≤–æ–ª–∏–∫—É –∫–∞—Ä—Ç. –í—Å—ë –±–µ–∑ –º–∏—Å—Ç–∏–∫–∏ ‚Äî —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —Å–µ–±—è."),

    ("–≠—Ç–æ —Ç–∏–ø–∞ –≥–∞–¥–∞–Ω–∏—è?",
     "–ù–µ —Å–æ–≤—Å–µ–º üôÇ –ö–∞—Ä—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π, –∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –û–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥ –Ω–æ–≤—ã–º —É–≥–ª–æ–º –∏ –Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã."),

    ("–° –∫–∞–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –º–æ–∂–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å?",
     "–° –ª—é–±—ã–º–∏: –æ—Ç–Ω–æ—à–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞, –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, –≤—ã–±–æ—Ä –ø—É—Ç–∏. –í—Å—ë, –≥–¥–µ –≤–∞–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å."),

    ("–ê –µ—Å–ª–∏ –Ω–µ—Ç —á—ë—Ç–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞?",
     "–¢–∞–∫ –±—ã–≤–∞–µ—Ç —á–∞—Å—Ç–æ. –í–æ –≤—Ä–µ–º—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤—Å—ë —Å–∞–º–æ –ø—Ä–æ—è—Å–Ω—è–µ—Ç—Å—è. –ò–Ω–æ–≥–¥–∞ –≤–∞–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥, –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–∞–º–æ."),

    ("–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å—Ç—Ä–µ—á–∞?",
     "–û–±—ã—á–Ω–æ –æ–Ω–ª–∞–π–Ω ‚Äî –≤ Zoom –∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–µ. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–º—É, –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—ã –∏ –æ–±—Å—É–∂–¥–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å."),
]

# üîπ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    name = message.from_user.first_name or "–¥—Ä—É–≥"
    kb = InlineKeyboardBuilder()
    for i, (q, _) in enumerate(qa_pairs):
        kb.button(text=q, callback_data=f"q_{i}")
    kb.button(text="üíå –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="consult")
    kb.adjust(1)
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {name}! üëã\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –¢–∞—Ä–æ.\n\n–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:",
        reply_markup=kb.as_markup()
    )

# üîπ –û—Ç–≤–µ—Ç—ã
@dp.callback_query(lambda c: c.data.startswith("q_"))
async def show_answer(callback: types.CallbackQuery):
    i = int(callback.data.split("_")[1])
    q, a = qa_pairs[i]
    kb = InlineKeyboardBuilder()
    kb.button(text="üíå –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="consult")
    kb.adjust(1)
    await callback.message.answer(f"‚ùì <b>{q}</b>\n\nüí¨ {a}", parse_mode="HTML", reply_markup=kb.as_markup())

# üîπ –ù–∞—á–∞–ª–æ –∑–∞—è–≤–∫–∏
@dp.callback_query(lambda c: c.data == "consult")
async def start_request(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("–î–∞–≤–∞–π –æ—Ñ–æ—Ä–º–∏–º –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞—è–≤–∫—É üìù\n\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(RequestForm.waiting_for_name)

# üîπ –ü–æ–ª—É—á–∞–µ–º –∏–º—è
@dp.message(RequestForm.waiting_for_name)
async def get_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–û —á—ë–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?")
    await state.set_state(RequestForm.waiting_for_topic)

# üîπ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É
@dp.message(RequestForm.waiting_for_topic)
async def get_topic(message: types.Message, state: FSMContext):
    await state.update_data(topic=message.text)
    await message.answer("–ö–∞–∫ —Å —Ç–æ–±–æ–π —Å–≤—è–∑–∞—Ç—å—Å—è? (–Ω–∞–ø—Ä–∏–º–µ—Ä, @username –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω)")
    await state.set_state(RequestForm.waiting_for_contact)

# üîπ –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É
@dp.message(RequestForm.waiting_for_contact)
async def get_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.text)
    data = await state.get_data()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    text = (
        f"üì© <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b>\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üí¨ –¢–µ–º–∞: {data['topic']}\n"
        f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n"
        f"üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–∞'}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    await bot.send_message(ADMIN_ID, text, parse_mode="HTML")

    await message.answer(
        "–°–ø–∞—Å–∏–±–æ! üôå –Ø –ø–µ—Ä–µ–¥–∞–ª –∑–∞—è–≤–∫—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. –û–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    await state.clear()

# üîπ –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def fallback(message: types.Message):
    await message.answer("–Ø –ø–æ–∫–∞ –æ—Ç–≤–µ—á–∞—é —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö üôÇ –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

# üîπ –ó–∞–ø—É—Å–∫
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
