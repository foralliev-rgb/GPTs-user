import telebot
import os
from dotenv import load_dotenv
from telebot import types

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))

# ID, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∏
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
TARO_QA = {
    "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?": (
        "–≠—Ç–æ —Å–ø–æ–∫–æ–π–Ω–∞—è –±–µ—Å–µ–¥–∞. –¢—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å, —á—Ç–æ –≤–æ–ª–Ω—É–µ—Ç, –∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç –ø–æ–º–æ–≥–∞–µ—Ç "
        "—É–≤–∏–¥–µ—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥ –¥—Ä—É–≥–∏–º —É–≥–ª–æ–º –∏ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –ª—É—á—à–µ."
    ),
    "–≠—Ç–æ —Ç–∏–ø–∞ –≥–∞–¥–∞–Ω–∏—è?": (
        "–ù–µ —Å–æ–≤—Å–µ–º üôÇ –ö–∞—Ä—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π, –∞ –∫–∞–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞. "
        "–û–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç —É–≤–∏–¥–µ—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã, –∞ –Ω–µ –±—É–¥—É—â–µ–µ."
    ),
    "–° –∫–∞–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç?": (
        "–° —Å–∞–º—ã–º–∏ —Ä–∞–∑–Ω—ã–º–∏ ‚Äî –æ—Ç–Ω–æ—à–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞, –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, –ø–æ–∏—Å–∫ —Å–µ–±—è, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –≤—ã–±–æ—Ä –ø—É—Ç–∏. "
        "–ì–ª–∞–≤–Ω–æ–µ ‚Äî –∂–µ–ª–∞–Ω–∏–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏."
    ),
    "–ê –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞?": (
        "–¢–∞–∫ –±—ã–≤–∞–µ—Ç —á–∞—Å—Ç–æ. –ü—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏–º ‚Äî –∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—Å—ë —Å–∞–º–æ –ø—Ä–æ—è—Å–Ω–∏—Ç—Å—è."
    ),
    "–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å—Ç—Ä–µ—á–∞?": (
        "–û–±—ã—á–Ω–æ –æ–Ω–ª–∞–π–Ω ‚Äî –≤ Zoom –∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–µ. –°–ø–æ–∫–æ–π–Ω–æ, –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è. "
        "–¢—ã –∑–∞–¥–∞—ë—à—å —Ç–µ–º—É, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç —Å–∏–º–≤–æ–ª–∏–∫—É –∫–∞—Ä—Ç, –∏ –≤–º–µ—Å—Ç–µ –∏—â–µ—Ç–µ —Å–º—ã—Å–ª."
    ),
    "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?": (
        "–û–±—ã—á–Ω–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–ª–∏—Ç—Å—è –æ–∫–æ–ª–æ —á–∞—Å–∞ –∏ —Å—Ç–æ–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 2 000 ‚ÇΩ. "
        "–ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å –∫–æ—Ä–æ—Ç–∫–æ–π –≤–≤–æ–¥–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏, —á—Ç–æ–±—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç."
    )
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üîÆ –í–æ–ø—Ä–æ—Å—ã –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏")
    btn2 = types.KeyboardButton("üíå –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é")
    btn3 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    markup.add(btn1, btn2, btn3)
    return markup

# –ü–æ–¥–º–µ–Ω—é —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
def questions_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for q in TARO_QA.keys():
        markup.add(types.KeyboardButton(q))
    markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return markup

# –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
user_requests = {}

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id,
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name or '–¥—Ä—É–≥'}! üëã\n"
        "–Ø —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –¢–∞—Ä–æ ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ, –±–µ–∑ –º–∏—Å—Ç–∏–∫–∏.\n"
        "–í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å üëá",
        reply_markup=main_menu()
    )

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.lower()

    # –í–æ–ø—Ä–æ—Å—ã
    if "–≤–æ–ø—Ä–æ—Å" in text:
        bot.send_message(
            message.chat.id,
            "–í–æ—Ç –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—â–µ –≤—Å–µ–≥–æ –∑–∞–¥–∞—é—Ç:",
            reply_markup=questions_menu()
        )

    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text:
        bot.send_message(
            message.chat.id,
            "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –º–æ–∂–Ω–æ –∑–¥–µ—Å—å:\n"
            "Telegram: @your_taro_username\n"
            "Email: taro.consult@example.com"
        )

    # –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
    elif "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü" in text:
        bot.send_message(
            message.chat.id,
            "üìù –î–∞–≤–∞–π –æ—Ñ–æ—Ä–º–∏–º –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞—è–≤–∫—É.\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"
        )
        user_requests[message.chat.id] = {"step": "name"}

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∑–∞—è–≤–∫—É
    elif message.chat.id in user_requests:
        step = user_requests[message.chat.id]["step"]

        # –®–∞–≥ 1 ‚Äî –∏–º—è
        if step == "name":
            user_requests[message.chat.id]["name"] = message.text
            user_requests[message.chat.id]["step"] = "topic"
            bot.send_message(message.chat.id, "–û —á—ë–º —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?")

        # –®–∞–≥ 2 ‚Äî —Ç–µ–º–∞
        elif step == "topic":
            user_requests[message.chat.id]["topic"] = message.text
            user_requests[message.chat.id]["step"] = "contact"
            bot.send_message(message.chat.id, "–ö–∞–∫ —Å —Ç–æ–±–æ–π —Å–≤—è–∑–∞—Ç—å—Å—è? (–Ω–∞–ø—Ä–∏–º–µ—Ä, @username –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω)")

        # –®–∞–≥ 3 ‚Äî –∫–æ–Ω—Ç–∞–∫—Ç
        elif step == "contact":
            user_requests[message.chat.id]["contact"] = message.text

            data = user_requests[message.chat.id]
            text_request = (
                f"üì© <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b>\n\n"
                f"üë§ –ò–º—è: {data['name']}\n"
                f"üí¨ –¢–µ–º–∞: {data['topic']}\n"
                f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n"
                f"üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–∞'}"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
            if ADMIN_ID:
                bot.send_message(ADMIN_ID, text_request, parse_mode="HTML")

            bot.send_message(
                message.chat.id,
                "–°–ø–∞—Å–∏–±–æ! üôå –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                reply_markup=main_menu()
            )
            del user_requests[message.chat.id]

    # –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
    elif message.text in TARO_QA.keys():
        answer = TARO_QA[message.text]
        bot.send_message(message.chat.id, f"üí¨ {answer}")

    # –ù–∞–∑–∞–¥
    elif "–Ω–∞–∑–∞–¥" in text:
        bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())

    # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
    else:
        bot.send_message(
            message.chat.id,
            "–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö –∏–ª–∏ –ø–æ–º–æ—á—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è üôÇ\n"
            "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é üëá",
            reply_markup=main_menu()
        )

# –ó–∞–ø—É—Å–∫
bot.polling(none_stop=True, interval=0)
